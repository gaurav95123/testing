const express = require("express");
const con = require("./config");
const http = require("http");
const { Server } = require("socket.io");
const { resourceLimits } = require("worker_threads");
const app = express();
app.use(express.json());
const server = http.createServer(app);
const io = new Server(server);

// socket.io start
io.on("connection", async (socket) => {
    const headers = socket.request.headers;
    const user_id = headers["user_id"];
    //  var user_id=socket.request.user_id;

    console.log("user connected:", user_id);
    try {
        await con.query("UPDATE users SET socket_id=? WHERE id=?", [
            socket.id,
            user_id,
        ]);
        console.log("id inserted into database");

        socket.on("chat_message", async (msg) => {
            // message query
            try {
                var currentdate = new Date();
                var datetime =
                    currentdate.getFullYear() +
                    "-" +
                    currentdate.getMonth() +
                    "-" +
                    currentdate.getDate() +
                    " " +
                    currentdate.getHours() +
                    ":" +
                    currentdate.getMinutes() +
                    ":" +
                    currentdate.getSeconds();

                const result = await con.query(
                    "INSERT INTO messages SET  message = ?, from_user_id = ?, to_user_id = ?,created_at=?,updated_at=?",

                    [
                        msg.message,
                        msg.from_user_id,
                        msg.to_user_id,
                        datetime,
                        datetime,
                    ]
                );

                // console.log("this is inserted data", result);

                console.log("Message inserted into database");

                const data = await con.query(
                    "SELECT socket_id FROM users WHERE id = ?",
                    [msg.to_user_id]
                );
                console.log(data);

                // socket.emit is use to  self send message except all
                // socket.emit("chat_message",msg.id.result[0].insertId,msg.message, msg.from_user_id,msg.to_user_id.msg.created_at.datetime,msg.updated_at.datetime)
                const results = {
                    id: result[0].insertId,
                    message: msg.message,
                    from_user_id: msg.from_user_id,
                    to_user_id: msg.to_user_id,
                    created_at: datetime,
                    updated_at: datetime,
                };

                socket.emit("chat_message", results);

                io.to(data[0][0].socket_id).emit("chat_message", results);
            } catch (error) {
                console.log("error", error);
            }
        });
    } catch (error) {
        console.log("error", error);
    }
    // When a client disconnects
    socket.on("disconnect", () => {
        console.log("user disconnected");
    });
});
server.listen(3001, () => console.log("server started at port 3001"));
======================================================================================================

const mysql = require("mysql2/promise");

const pool = mysql.createPool({
    host: "localhost",
    user: "root",
    password: "redhat",
    database: "society_19_january",
});

// Testing the connection
pool.getConnection()
    .then(connection => {
        console.log("Connected to MySQL database");
        connection.release(); // Release the connection back to the pool
    })
    .catch(error => {
        console.error("Error connecting to MySQL database:", error.message);
    });


module.exports = pool;

