crud using laravel api


<?php

namespace App\Http\Controllers\API;
use Illuminate\Support\Facades\Hash;
use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\Custom;
use Illuminate\Support\Facades\Validator;


class UserController extends Controller

{
    
    // function to create user 

    public function createUser(Request $request ){

        $validator= Validator::make($request->all(),[
            'name'=>'required|string',
            'email'=>'required|string|unique:customs',
            'phone' => 'required|numeric|digits:10',
            'password'=>'required|min:6'

        ]);
        if($validator->fails()){
            $result = array('status' => false, 'message' => 'validation error occured', 'error_message' => $validator->errors());
            return response()->json($result, 400); //bad request
        }

        $cost=new Custom;
        $cost->name=$request->name;
        $cost->email=$request->email;
        $cost->phone=$request->phone;
        $cost->password=\Hash::make($request->password);
        $cost->save();

        if($cost->id){
            $result=array('status'=>true,'message'=>'product created','data'=>$cost);
            $responseCode=200; //success

        }
        // this is for exception case 
        else{
            $result=array('status'=>true,'message'=>"something went wrong");
            $responseCode=400;
        }
        return response()->json($result,$responseCode); 

    //    return response()->json(['status'=>'true', 'message'=>"Hello World",'data'=>$request->all()]);
    }


    // function to return all users

    public function getUser(){
        $cost=Custom::get();
        $result=array('status'=>true,'message'=>count($cost)." user fatched",'data'=>$cost);
    return response()->json($result,200);

    }


//  function to return single user details

    public function getUserDetail($id){
        $cost=Custom::where('id',$id)->first();
        if(!$cost)
        {
            return response()->json([ 'status'=>false,'message'=>'user not found'],404);
        }

        $result=array('status'=>true,'message'=>'user found','data'=>$cost);
        return response()->json($result,200);
    }

    // update user code

    public function updateUser(Request $request,$id )
    {
        $cost=Custom::find($id);

        if(!$cost){
            return response()->json(['status'=>false,'message'=>"user not found" ],404);
        }

        // validation

        $validator= Validator::make($request->all(),[
            'name'=>'required|string',
            // 'email'=>"required|string|unique:customs,email,".$id,
            
            'email' => "required|string|unique:customs,email,$id",
            'phone' => 'required|numeric|digits:10'
          

        ]);
        if($validator->fails()){
            $result = array('status' => false, 'message' => 'validation error occured', 'error_message' => $validator->errors());
            return response()->json($result, 400); //bad request
        }
        
        // update code
        $cost->name=$request->name;
        $cost->email=$request->email;
        $cost->phone=$request->phone;
      
        $cost->save();
        $result=array('status'=>true,'message'=>'product updated successfully','data'=>$cost);
        return response()->json($result,200);

    }



    public function deleteUser($id){
            $cost=Custom::find($id);
            if(!$cost){
                return response()->json(['status'=>false,'message'=>"user not found" ],404);
            }
            $cost->delete();
                $result=array('status'=>true,'message'=>'User has been deleleted successfully');
                return response()->json($result,200);
        
        }
    }
=============================================================================================
 crud routes 
<?php

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;
use App\Http\Controllers\API\UserController;


/*
|--------------------------------------------------------------------------
| API Routes
|--------------------------------------------------------------------------
|
| Here is where you can register API routes for your application. These
| routes are loaded by the RouteServiceProvider within a group which
| is assigned the "api" middleware group. Enjoy building your API!
|
*/

Route::middleware('auth:sanctum')->get('/user', function (Request $request) {
    return $request->user();
});

Route::post('create-user',[UserController::class,'createUser']);
Route::get('get-user',[UserController::class,'getUser']);
Route::get('get-user-detail/{id}',[UserController::class,'getUserDetail']);
Route::put('update-user/{id}',[UserController::class,'updateUser']);
Route::delete('delete-user/{id}',[UserController::class,'deleteUser']);














    

